---
name: Update packages

on:
  workflow_dispatch:
  push:
jobs:
  update_package:
    name: Update package
    runs-on: ubuntu-latest
    strategy:
      matrix:
        package:
          - adguardhome
          - asdf-vm
          - collectd
          - gickup
          - flacon
          # - git-standup-git
          - google-chrome
          - neolink-git
          - package-query
          - pikaur
          - platformio
          - plymouth
          # - rubymine
          - shellcheck-bin
          - telegraf
          - visual-studio-code-bin
          - plex-media-server
          # - golangci-lint-bin
          - aws-session-manager-plugin
          - freecad-linkstage3-git

    steps:
      - name: Check out
        uses: actions/checkout@v3

      - name: Authenticate at ghcr.io
        run: echo ${{ secrets.GITHUB_TOKEN }} | docker login ghcr.io -u USERNAME --password-stdin

      - name: Pull comtainer
        run: docker-compose pull

      - name: Check if the package is already built
        id: built_step
        run: |
          built=$(docker-compose run arch_builder ./builder-cli --host ${{ secrets.UPLOAD_HOST }} --token ${{ secrets.UPLOAD_TOKEN }} info ${{ matrix.package }} | jq -r .built)
          echo "::set-output name=built::$built"

      - name: Get latest verion
        if: steps.built_step.outputs.built == 'false'
        id: version_step
        run: |
          version=$(docker-compose run arch_builder ./builder-cli --host ${{ secrets.UPLOAD_HOST }} --token ${{ secrets.UPLOAD_TOKEN }} info ${{ matrix.package }} | jq -r .version)
          echo "::set-output name=version::$version"

      - name: Cache
        if: steps.built_step.outputs.built == 'false'
        id: cache
        uses: actions/cache@v3
        with:
          path: cache
          key: ${{ matrix.package }}-v4-${{ steps.version_step.outputs.version }}
          restore-keys: |
            ${{ matrix.package }}-v4

      - name: Build
        if: steps.built_step.outputs.built == 'false'
        run: |
           docker-compose run arch_builder ./builder-cli --host ${{ secrets.UPLOAD_HOST }} --token ${{ secrets.UPLOAD_TOKEN }} build ${{ matrix.package }}

      - name: Upload packages
        if: steps.built_step.outputs.built == 'false'
        run: |
          find cache/pikaur -type f -name '*.pkg.tar.zst' | xargs -I % curl --fail -Ffile=@% 'https://${{ secrets.UPLOAD_HOST }}/upload?token=${{ secrets.UPLOAD_TOKEN }}'
